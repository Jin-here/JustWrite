package Xuer.dz.net;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.net.UnknownHostException;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class ClientDZ extends Activity {
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        findviews();//使用findviews方法
        setonclick();//使用setonclick方法
    }
    private EditText chattxt;
    private TextView chattxt2;
    private Button chatok;
    
    public void findviews(){ 
    	//在findviews（）方法中首先，建一个EditText和TextView,以及一个按钮
    	chattxt=(EditText)this.findViewById(R.id.text2);
    	chattxt2=(TextView)this.findViewById(R.id.text1);
    	chatok=(Button)this.findViewById(R.id.button1);
    	
    }
    //点击事件
    private void setonclick(){
    	//按钮的监听事件
    	chatok.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				try{
					connecttoserver(chattxt.getText().toString());}
				catch(UnknownHostException e){e.printStackTrace();}
				catch(IOException e){e.printStackTrace();}
			
			}
		});}
    //创建一个connecttoseever类，来连接服务器
    	public void connecttoserver(String socketData)throws UnknownHostException,IOException{
    		//获取Socket类对象socket，请求服务器192.168.137.1
    		Socket socket=RequestSocket("192.168.1.116",12315);//指定Server监听的端口和服务器IP地址。

    		SendMsg(socket,socketData);//发送信息
    		
    		String txt=ReceiveMsg(socket);//接收信息
    		
    		this.chattxt2.setText(txt);//显示信息
    	}
    	private Socket RequestSocket(String host,int port)throws UnknownHostException,IOException
    	{
    		Socket socket=new Socket(host,port);
    		return socket;
    	}
    	private void SendMsg(Socket socket,String msg)throws IOException{
    		BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));//创建输出流
    		writer.write(msg.replace("\n","")+"\n");//写入信息
    		writer.flush();
    	}
    	private String ReceiveMsg(Socket socket)throws IOException
    	{//接收服务器广播信息，并打印在手机上
    		BufferedReader reader=new BufferedReader(new InputStreamReader(socket.getInputStream()));
    		
    		String txt=reader.readLine();
    		
    		return txt;
    	}
    }
    
