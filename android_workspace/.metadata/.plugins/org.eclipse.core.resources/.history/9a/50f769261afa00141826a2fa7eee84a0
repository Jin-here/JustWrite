package com.environmentalmonitoring.activity;



import java.util.ArrayList;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.view.LayoutInflater;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TabHost;
import android.widget.TabHost.OnTabChangeListener;
import android.widget.TabWidget;
import android.widget.TextView;

import com.environmentalmonitoring.bean.MachineStatus;
import com.environmentalmonitoring.bean.SensorBean;
import com.environmentalmonitoring.config.Config;
import com.environmentalmonitoring.db.MySharedPreferences;
import com.environmentalmonitoring.fragment.Tab00Fragment;
import com.environmentalmonitoring.fragment.Tab01Fragment;
import com.environmentalmonitoring.fragment.Tab02Fragment;
import com.environmentalmonitoring.fragment.Tab03Fragment;
import com.environmentalmonitoring.thread.GetDataThread;
import com.environmentalmonitoring.thread.GetDataThread.OnDataDownloadedListener;
import com.environmentalmonitoring.util.DummyTabContent;


public class MainActivity extends FragmentActivity{
	
	private TabHost mTabHost;
	private TextView mTitleTextView;	
	private TabWidget mTabWidget;
	
	private RelativeLayout mTabWidget00,mTabWidget01,mTabWidget02,mTabWidget03;
	private int mCurrentTab = Config.START_PAGE;
	
	private FragmentTransaction mFT;
	private Tab00Fragment mTab00Fragment;
	private Tab01Fragment mTab01Fragment;
	private Tab02Fragment mTab02Fragment;
	private Tab03Fragment mTab03Fragment;
	
	private MachineStatus status = new MachineStatus();
	private ArrayList<SensorBean> data = new ArrayList<SensorBean>();
	
	private GetDataThread get_data_thread;
	private MySharedPreferences mMSP;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		
		/**************是否进入学习动画***************************/
		mMSP = (MySharedPreferences) this.getApplication();
		if (mMSP.isFirstRun()){
			
			mMSP.setFirstRun();
		}
		/**************是否进入学习动画**************************/
		
		/***************获取开关状态****************************/
		
		status.setStatus(false, false, false, false);
		/***************获取开关状态****************************/
		
		/***************获取数据******************************/
		
		get_data_thread = new GetDataThread();
		get_data_thread.start();
		/***************获取数据******************************/
		
		mTabHost = (TabHost) findViewById(android.R.id.tabhost);
		mTitleTextView = (TextView) findViewById(R.id.title_text_view);		
		mTabWidget = (TabWidget)findViewById(android.R.id.tabs);
		
		createTabView();
		mTabHost.setup();
		initTab();
		mTabHost.setCurrentTab(mCurrentTab);
		
		mTabHost.setOnTabChangedListener(new OnTabChangeListener() {
			
			@Override
			public void onTabChanged(String tabId) {
				// TODO Auto-generated method stub
				System.out.println(tabId + mCurrentTab);
				/**碎片管理*/
				FragmentManager fM = getSupportFragmentManager();
				//根据名称找到相应的子窗体
				mTab00Fragment = (Tab00Fragment) fM.findFragmentByTag(Tab00Fragment.TAG);
				mTab01Fragment = (Tab01Fragment) fM.findFragmentByTag(Tab01Fragment.TAG);
				mTab02Fragment = (Tab02Fragment) fM.findFragmentByTag(Tab02Fragment.TAG);
				mTab03Fragment = (Tab03Fragment) fM.findFragmentByTag(Tab03Fragment.TAG);
				
				mFT = fM.beginTransaction();				
				//先分离这些子窗体
				if(mTab00Fragment!=null)					
					mFT.detach(mTab00Fragment);
				if(mTab01Fragment!=null)
					mFT.detach(mTab01Fragment);
				if(mTab02Fragment!=null)
					mFT.detach(mTab02Fragment);
				if(mTab03Fragment!=null)
					mFT.detach(mTab03Fragment);
				
				//再重新添加这些子窗体，这样操作可以间接通知各个子窗体界面发生了切换，便于子窗体更新相关数据
				if(tabId.equalsIgnoreCase(Tab00Fragment.TAG)){					
					setupEnvirFrag();					
				}else if(tabId.equalsIgnoreCase(Tab01Fragment.TAG)){	
					setupHistroyFrag();					
				}else if(tabId.equalsIgnoreCase(Tab02Fragment.TAG)){	
					setupControlFrag();					
				}else if(tabId.equalsIgnoreCase(Tab03Fragment.TAG)){	
					setupSettingFrag();					
				}
				
				mFT.commit();
			}
		});
	}
	
	/**
	 * 设置widget界面
	 */
	private void createTabView()
    {

         //创建"环境指标"的tab view
         mTabWidget00 = (RelativeLayout) LayoutInflater.from(this).inflate(R.layout.tab_indicator, mTabWidget, false);
         TextView tvTab1 = (TextView)mTabWidget00.getChildAt(1);
         ImageView ivTab1 = (ImageView)mTabWidget00.getChildAt(0);
         ivTab1.setBackgroundResource(R.drawable.widget00_icon);
         tvTab1.setText(R.string.widget_tab00_text);
         
         //创建"历史数据查询"的tab view
         mTabWidget01 = (RelativeLayout) LayoutInflater.from(this).inflate(R.layout.tab_indicator, mTabWidget, false);
         TextView tvTab2 = (TextView)mTabWidget01.getChildAt(1);
         ImageView ivTab2 = (ImageView)mTabWidget01.getChildAt(0);
         ivTab2.setBackgroundResource(R.drawable.widget01_icon);
         tvTab2.setText(R.string.widget_tab01_text);
         
         //创建"手动控制"的tab view
         mTabWidget02 = (RelativeLayout) LayoutInflater.from(this).inflate(R.layout.tab_indicator, mTabWidget, false);
         TextView tvTab3 = (TextView)mTabWidget02.getChildAt(1);
         ImageView ivTab3 = (ImageView)mTabWidget02.getChildAt(0);
         ivTab3.setBackgroundResource(R.drawable.widget02_icon);
         tvTab3.setText(R.string.widget_tab02_text);
         
         //创建"系统设置"的tab view
         mTabWidget03 = (RelativeLayout) LayoutInflater.from(this).inflate(R.layout.tab_indicator, mTabWidget, false);
         TextView tvTab4 = (TextView)mTabWidget03.getChildAt(1);
         ImageView ivTab4 = (ImageView)mTabWidget03.getChildAt(0);
         ivTab4.setBackgroundResource(R.drawable.widget03_icon);
         tvTab4.setText(R.string.widget_tab03_text);
    }
	
	
	private void initTab(){
    	//将"环境指标"的tab view绑定到主界面的Tab host上, 通过子窗体TAG进行关联
        TabHost.TabSpec tSpecEnvir = mTabHost.newTabSpec(Tab00Fragment.TAG);
        tSpecEnvir.setIndicator(mTabWidget00);        
        tSpecEnvir.setContent(new DummyTabContent(getBaseContext()));//添加一个简单的上下文环境
        mTabHost.addTab(tSpecEnvir);
        
        //将"历史数据查询"的tab view绑定到主界面的Tab host上, 通过子窗体TAG进行关联
        TabHost.TabSpec tSpecHistory = mTabHost.newTabSpec(Tab01Fragment.TAG);
        tSpecHistory.setIndicator(mTabWidget01);        
        tSpecHistory.setContent(new DummyTabContent(getBaseContext()));//添加一个简单的上下文环境
        mTabHost.addTab(tSpecHistory);
        
        //将"手动控制"的tab view绑定到主界面的Tab host上, 通过子窗体TAG进行关联
        TabHost.TabSpec tSpecControl = mTabHost.newTabSpec(Tab02Fragment.TAG);
        tSpecControl.setIndicator(mTabWidget02);      
        tSpecControl.setContent(new DummyTabContent(getBaseContext()));//添加一个简单的上下文环境
        mTabHost.addTab(tSpecControl);
        
        //将"系统设置"的tab view绑定到主界面的Tab host上, 通过子窗体TAG进行关联
        TabHost.TabSpec tSpecSet = mTabHost.newTabSpec(Tab03Fragment.TAG);
        tSpecSet.setIndicator(mTabWidget03);        
        tSpecSet.setContent(new DummyTabContent(getBaseContext()));//添加一个简单的上下文环境
        mTabHost.addTab(tSpecSet);
    }
	
	private void setupEnvirFrag(){
    	if(mTab00Fragment==null){		
			mFT.add(R.id.realTabcontent, new Tab00Fragment(), Tab00Fragment.TAG);						
		}else{
			mFT.attach(mTab00Fragment);						
		}
    	mTitleTextView.setText(R.string.tabhost_tab00_title);
    	
    }
	
	private void setupHistroyFrag(){
    	if(mTab01Fragment==null){
			mFT.add(R.id.realTabcontent, new Tab01Fragment(), Tab01Fragment.TAG);						
		}else{
			mFT.attach(mTab01Fragment);						
		}
    	mTitleTextView.setText(R.string.tabhost_tab01_title);
    	
    }
	
	private void setupControlFrag(){
    	if(mTab02Fragment==null){
			mFT.add(R.id.realTabcontent, new Tab02Fragment(), Tab02Fragment.TAG);						
		}else{
			mFT.attach(mTab02Fragment);						
		}
    	mTitleTextView.setText(R.string.tabhost_tab02_title);
    
    }
	
	private void setupSettingFrag(){
    	if(mTab03Fragment==null){
			mFT.add(R.id.realTabcontent, new Tab03Fragment(), Tab03Fragment.TAG);						
		}else{
			mFT.attach(mTab03Fragment);	
		}
    	mTitleTextView.setText(R.string.tabhost_tab03_title);
    	
    }
	
	public  ArrayList<SensorBean> getData(){
		return data;
	}
	
	public MachineStatus getStatus(){
		return status;
	}
	
	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		get_data_thread.closeSocket();
		super.onDestroy();
		
	}

	
}
